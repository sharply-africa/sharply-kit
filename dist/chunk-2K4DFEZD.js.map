{"version":3,"sources":["../src/components/Pagination/Pagination.tsx"],"names":["React","forwardRef","Pagination","page","onChange","total","ref","onSelectChange","e","newPage","goToPrev","goToNext","Wrapper","Flex_default","Select_default","x","Text_default","Controls","Control","CaretLeft_default","CaretRight_default","Pagination_default"],"mappings":"8PAAA,OAAOA,GAAS,cAAAC,MAAkB,QAalC,IAAMC,EAAaD,EACjB,CAAC,CAAE,KAAAE,EAAO,EAAG,SAAAC,EAAW,IAAM,CAAC,EAAG,MAAAC,EAAQ,CAAE,EAAoBC,IAAQ,CACtE,IAAMC,EAAkBC,GAAM,CAC5B,IAAMC,EAAU,CAACD,EAAE,OAAO,MAC1BJ,EAASK,CAAO,CAClB,EAEMC,EAAW,IAAM,CACjBP,EAAO,GACTC,EAAS,CAACD,EAAO,CAAC,CAEtB,EAEMQ,EAAW,IAAM,CACjBR,EAAOE,GACTD,EAAS,CAACD,EAAO,CAAC,CAEtB,EAEA,OAAKE,EAGHL,EAAA,cAACY,EAAA,CAAQ,IAAKN,GACZN,EAAA,cAACa,EAAA,CAAK,WAAW,UACfb,EAAA,cAACc,EAAA,CACC,SAAS,OACT,GAAI,EACJ,SAAUP,EACV,GAAG,SACH,MAAOJ,GAEN,CAAC,GAAG,MAAME,EAAQ,CAAC,EAAE,KAAK,CAAC,EACzB,OAAQU,GAAMA,EAAI,CAAC,EACnB,IAAKA,GACJf,EAAA,cAAC,UAAO,IAAKe,EAAG,MAAOA,GACpBA,CACH,CACD,CACL,EAEAf,EAAA,cAACgB,EAAA,CAAK,WAAY,GAAG,MAAIX,CAAM,CACjC,EAEAL,EAAA,cAACiB,EAAA,KACCjB,EAAA,cAACkB,EAAA,CAAQ,SAAUf,EAAO,EAAG,QAASO,GACpCV,EAAA,cAACmB,EAAA,IAAU,CACb,EAEAnB,EAAA,cAACkB,EAAA,CAAQ,SAAUf,EAAOE,EAAQ,EAAG,QAASM,EAAU,GAAG,QACzDX,EAAA,cAACoB,EAAA,IAAW,CACd,CACF,CACF,EAjCiB,IAmCrB,CACF,EAEOC,EAAQnB","sourcesContent":["import React, { forwardRef } from 'react';\nimport { Flex } from 'src/components/Flex';\nimport { Text } from 'src/components/Text';\nimport { Select } from 'src/components/Select';\nimport { CaretLeft, CaretRight } from 'src/components/Icons';\nimport { Control, Controls, Wrapper } from './StyledComponents';\n\ninterface PaginationProps {\n  page?: number;\n  onChange?: (page: number) => void;\n  total?: number;\n}\n\nconst Pagination = forwardRef(\n  ({ page = 1, onChange = () => {}, total = 0 }: PaginationProps, ref) => {\n    const onSelectChange = (e) => {\n      const newPage = +e.target.value;\n      onChange(newPage);\n    };\n\n    const goToPrev = () => {\n      if (page > 1) {\n        onChange(+page - 1);\n      }\n    };\n\n    const goToNext = () => {\n      if (page < total) {\n        onChange(+page + 1);\n      }\n    };\n\n    if (!total) return null;\n\n    return (\n      <Wrapper ref={ref}>\n        <Flex alignItems=\"center\">\n          <Select\n            minWidth=\"8rem\"\n            mr={2}\n            onChange={onSelectChange}\n            py=\"0.9rem\"\n            value={page}\n          >\n            {[...Array(total + 1).keys()]\n              .filter((x) => x > 0)\n              .map((x) => (\n                <option key={x} value={x}>\n                  {x}\n                </option>\n              ))}\n          </Select>\n\n          <Text flexShrink={0}>of {total}</Text>\n        </Flex>\n\n        <Controls>\n          <Control disabled={page < 2} onClick={goToPrev}>\n            <CaretLeft />\n          </Control>\n\n          <Control disabled={page > total - 1} onClick={goToNext} ml=\"-4px\">\n            <CaretRight />\n          </Control>\n        </Controls>\n      </Wrapper>\n    );\n  },\n);\n\nexport default Pagination;\n"]}