{"version":3,"sources":["../src/lib/colors.ts"],"names":["tinycolor","getPropName","prop","getColorHex","color","root","rs","propName","hexColor","newTinyColor"],"mappings":"AAAA,OAAOA,MAAe,aAEtB,IAAMC,EAAeC,GACZA,EAAK,QAAQ,OAAQ,EAAE,EAAE,QAAQ,IAAK,EAAE,EAGpCC,EAAeC,GAA0B,CACpD,GAAI,OAAO,OAAW,KAAeA,EAAO,CAC1C,IAAMC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAK,iBAAiBD,CAAI,EAC1BE,EAAWN,EAAYG,CAAK,EAC5BI,EAAWJ,EAAM,WAAW,KAAK,EACnCE,EAAG,iBAAiBC,CAAQ,EAC5BH,EAEEK,EAAeT,EAAUQ,CAAQ,EACvC,OAAAC,EAAa,QAAQ,EAAE,EAChBA,EAAa,YAAY,CAClC,CACA,OAAOL,CACT","sourcesContent":["import tinycolor from 'tinycolor2';\n\nconst getPropName = (prop: string): string => {\n  return prop.replace('var(', '').replace(')', '');\n};\n\nexport const getColorHex = (color: string): string => {\n  if (typeof window !== 'undefined' && color) {\n    const root = document.querySelector(':root');\n    const rs = getComputedStyle(root);\n    const propName = getPropName(color);\n    const hexColor = color.startsWith('var')\n      ? rs.getPropertyValue(propName)\n      : color;\n\n    const newTinyColor = tinycolor(hexColor);\n    newTinyColor.lighten(30);\n    return newTinyColor.toHexString();\n  }\n  return color;\n};\n"]}