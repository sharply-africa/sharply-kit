{"version":3,"sources":["../src/components/Checkbox/Checkbox.tsx"],"names":["React","forwardRef","Checkbox","props","ref","active","icon","isLoading","onChange","size","subtitle","subtitleProps","sx","title","titleProps","Stack_default","Spinner_default","Box_default","Checkmark_default","Text_default","Checkbox_default"],"mappings":"wMAAA,OAAOA,GAAS,cAAAC,MAAkB,QAmBlC,IAAMC,EAAWD,EAA4C,CAACE,EAAOC,IAAQ,CAC3E,GAAM,CACJ,OAAAC,EACA,KAAAC,EACA,UAAAC,EAAY,GACZ,SAAAC,EAAW,IAAM,CAAC,EAClB,KAAAC,EAAO,SACP,SAAAC,EACA,cAAAC,EAAgB,CAAC,EACjB,GAAAC,EAAK,CAAC,EACN,MAAAC,EACA,WAAAC,EAAa,CAAC,CAChB,EAAIX,EAEJ,OACEH,EAAA,cAACe,EAAA,CACC,UAAU,MACV,QAAS,IAAMP,EAAS,CAACH,CAAM,EAC/B,IAAKD,EACL,QAAS,EACT,GAAI,CACF,cAAeG,EAAY,OAAS,OACpC,GAAKG,EAAsC,CAAC,EAA5B,CAAE,WAAY,QAAS,EACvC,GAAGE,CACL,EACC,GAAGT,GAEHI,EACCP,EAAA,cAACgB,EAAA,CAAQ,KAAMP,EAAM,EAErBT,EAAA,cAACiB,EAAA,CACC,MAAO,CACL,WAAcP,EAAW,SAAW,aACpC,gBAAiB,QACjB,OAAQ,aAAaL,EAAS,cAAgB,YAC9C,aAAc,OACd,OAAQ,UACR,QAAS,OACT,OAAQI,EACR,SAAU,WACV,MAAOA,CACT,GAEAT,EAAA,cAACiB,EAAA,CACC,MAAO,CACL,WAAY,SACZ,gBAAiB,UACjB,aAAc,OACd,QAAS,OACT,OAAQR,EACR,eAAgB,SAChB,KAAM,EACN,QAASJ,EAAS,EAAI,EACtB,QAAS,MACT,SAAU,WACV,IAAK,EACL,WAAY,WACZ,MAAOI,CACT,GAECH,GAAQN,EAAA,cAACkB,EAAA,IAAU,CACtB,CACF,EAGFlB,EAAA,cAACe,EAAA,CAAM,QAAS,GACbF,EACCb,EAAA,cAACmB,EAAA,CACC,SAAS,KACT,MAAM,UACN,GAAI,CAAE,WAAY,MAAO,EACxB,GAAGL,GAEHD,CACH,EACE,KAEHH,EACCV,EAAA,cAACmB,EAAA,CACC,SAAS,MACT,MAAM,OACN,GAAI,CAAE,WAAY,MAAO,EACxB,GAAGR,GAEHD,CACH,EACE,IACN,CACF,CAEJ,CAAC,EAEMU,EAAQlB","sourcesContent":["import React, { forwardRef } from 'react';\nimport { Checkmark } from 'src/components/Icons';\nimport { Box, BoxProps } from 'src/components/Box';\nimport { Spinner } from 'src/components/Spinner';\nimport { Stack } from 'src/components/Stack';\nimport { Text, TextProps } from 'src/components/Text';\n\ninterface CheckboxProps extends BoxProps {\n  active?: boolean;\n  icon?: React.ReactElement;\n  isLoading?: boolean;\n  onChange?: (v: boolean) => void;\n  size?: string;\n  subtitle?: string;\n  subtitleProps?: TextProps;\n  title?: string;\n  titleProps?: TextProps;\n}\n\nconst Checkbox = forwardRef<HTMLInputElement, CheckboxProps>((props, ref) => {\n  const {\n    active,\n    icon,\n    isLoading = false,\n    onChange = () => {},\n    size = '1.6rem',\n    subtitle,\n    subtitleProps = {},\n    sx = {},\n    title,\n    titleProps = {},\n  } = props;\n\n  return (\n    <Stack\n      direction=\"row\"\n      onClick={() => onChange(!active)}\n      ref={ref}\n      spacing={2}\n      sx={{\n        pointerEvents: isLoading ? 'none' : 'auto',\n        ...(!subtitle ? { alignItems: 'center' } : {}),\n        ...sx,\n      }}\n      {...props}\n    >\n      {isLoading ? (\n        <Spinner size={size} />\n      ) : (\n        <Box\n          __css={{\n            alignItems: !!subtitle ? 'center' : 'flex-start',\n            backgroundColor: 'white',\n            border: `1px solid ${active ? 'transparent' : '#C4C4C4'}`,\n            borderRadius: 'base',\n            cursor: 'pointer',\n            display: 'flex',\n            height: size,\n            position: 'relative',\n            width: size,\n          }}\n        >\n          <Box\n            __css={{\n              alignItems: 'center',\n              backgroundColor: 'primary',\n              borderRadius: 'base',\n              display: 'flex',\n              height: size,\n              justifyContent: 'center',\n              left: 0,\n              opacity: active ? 1 : 0,\n              padding: '2px',\n              position: 'absolute',\n              top: 0,\n              transition: 'all 0.2s',\n              width: size,\n            }}\n          >\n            {icon || <Checkmark />}\n          </Box>\n        </Box>\n      )}\n\n      <Stack spacing={1}>\n        {title ? (\n          <Text\n            fontSize=\"xs\"\n            color=\"heading\"\n            sx={{ userSelect: 'none' }}\n            {...titleProps}\n          >\n            {title}\n          </Text>\n        ) : null}\n\n        {subtitle ? (\n          <Text\n            fontSize=\"xxs\"\n            color=\"text\"\n            sx={{ userSelect: 'none' }}\n            {...subtitleProps}\n          >\n            {subtitle}\n          </Text>\n        ) : null}\n      </Stack>\n    </Stack>\n  );\n});\n\nexport default Checkbox;\n"]}